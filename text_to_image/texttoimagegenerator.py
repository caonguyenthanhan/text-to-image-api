# -*- coding: utf-8 -*-
"""TextToImageGenerator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T7WemEtSlsFxaJ4pDGKesz9_LtoUhsl1
"""

!pip install --upgrade diffusers transformers -q

from pathlib import Path
import tqdm
import torch
import pandas as pd
import numpy as np
from diffusers import StableDiffusionPipeline
from transformers import pipeline, set_seed
import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
import cv2

class CFG:
    device = "cuda"
    seed = 42
    generator = torch.Generator(device).manual_seed(seed)
    image_gen_steps = 35
    image_gen_model_id = "stabilityai/stable-diffusion-2"
    image_gen_size = (400,400)
    image_gen_guidance_scale = 9
    prompt_gen_model_id = "gpt2"
    prompt_dataset_size = 6
    prompt_max_length = 12

image_gen_model = StableDiffusionPipeline.from_pretrained(
    CFG.image_gen_model_id, torch_dtype=torch.float16,
    revision="fp16", use_auth_token='your_hugging_face_auth_token', guidance_scale=9
)
image_gen_model = image_gen_model.to(CFG.device)

def generate_image(prompt, model):
    image = model(
        prompt, num_inference_steps=CFG.image_gen_steps,
        generator=CFG.generator,
        guidance_scale=CFG.image_gen_guidance_scale
    ).images[0]

    image = image.resize(CFG.image_gen_size)
    return image

!pip install googletrans==4.0.0-rc1 -q

from googletrans import Translator

def translation(txt):
  translator = Translator()
  ban_dich = translator.translate(txt, src='vi', dest='en')
  return ban_dich.text

txt="một chú chim chích choẻ cạnh bông hoa tulip"
generate_image(translation(txt), image_gen_model)

from diffusers import StableDiffusionPipeline
from googletrans import Translator
import torch
from flask import Flask, request, jsonify
from PIL import Image
import io
import os

class CFG:
    device = "cuda"
    seed = 42
    generator = torch.Generator(device).manual_seed(seed)
    image_gen_steps = 35
    image_gen_model_id = "stabilityai/stable-diffusion-2"
    image_gen_size = (512, 512)
    image_gen_guidance_scale = 9

# Tải mô hình tạo ảnh Stable Diffusion
image_gen_model = StableDiffusionPipeline.from_pretrained(
    CFG.image_gen_model_id, torch_dtype=torch.float16,
    revision="fp16", use_auth_token=os.environ.get('HUGGING_FACE_TOKEN')
)
image_gen_model = image_gen_model.to(CFG.device)

# Hàm dịch thuật
def translation(txt):
  translator = Translator()
  ban_dich = translator.translate(txt, src='vi', dest='en')
  return ban_dich.text

# Hàm tạo ảnh
def generate_image(prompt, model):
    image = model(
        prompt, num_inference_steps=CFG.image_gen_steps,
        generator=CFG.generator,
        guidance_scale=CFG.image_gen_guidance_scale
    ).images[0]

    image = image.resize(CFG.image_gen_size)
    return image

app = Flask(__name__)

@app.route('/generate', methods=['POST'])
def generate():
    if request.method == 'POST':
        prompt = request.form.get('prompt')
        if not prompt:
            return jsonify({'error': 'Missing prompt'}), 400

        # Dịch prompt sang tiếng Anh
        prompt_en = translation(prompt)

        # Tạo ảnh
        image = generate_image(prompt_en, image_gen_model)

        # Chuyển đổi ảnh PIL sang bytes
        img_byte_arr = io.BytesIO()
        image.save(img_byte_arr, format='PNG')
        img_byte_arr = img_byte_arr.getvalue()

        return img_byte_arr, 200, {'Content-Type': 'image/png'}

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=3000)